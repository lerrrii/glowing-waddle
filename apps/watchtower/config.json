{
  "$schema": "../app-info-schema.json",
  "name": "Watchtower+",
  "id": "watchtower",
  "available": true,
  "exposable": false,
  "dynamic_config": true,
  "port": 8080,
  "tipi_version": 1,
  "version": "latest",
  "categories": ["utilities", "automation", "security"],
  "author": "containrrr + Runtipi community",
  "description": "Auto-update Docker containers with cron, time-zone, and notifications support.",
  "short_desc": "Docker auto-updater with notifications.",
  "source": "https://github.com/containrrr/watchtower",
  "form_fields": [
    {
      "type": "text",
      "label": "User ID (PUID)",
      "hint": "User ID to run the container as (default: 1000)",
      "env_variable": "PUID",
      "default": "1000"
    },
    {
      "type": "text",
      "label": "Group ID (PGID)",
      "hint": "Group ID to run the container as (default: 1000)",
      "env_variable": "PGID",
      "default": "1000"
    },
    {
      "type": "text",
      "label": "Timezone",
      "hint": "Timezone for scheduling and logs (default: Europe/Prague)",
      "env_variable": "TZ",
      "default": "Europe/Prague"
    },
    {
      "type": "text",
      "label": "Docker Hub Username",
      "hint": "Your Docker Hub username to bypass rate limits",
      "env_variable": "DOCKER_HUB_USERNAME",
      "required": false
    },
    {
      "type": "password",
      "label": "Docker Hub Password",
      "hint": "Your Docker Hub password or access token to bypass rate limits",
      "env_variable": "DOCKER_HUB_PASSWORD",
      "required": false
    },
    {
      "type": "boolean",
      "label": "Enable label filtering",
      "hint": "Only update containers with com.centurylinklabs.watchtower.enable=true label",
      "env_variable": "WATCHTOWER_LABEL_ENABLE",
      "default": true
    },
    {
      "type": "text",
      "label": "Cron schedule (6 fields)",
      "placeholder": "e.g., 0 0 4 * * * for daily at 4 AM",
      "env_variable": "WATCHTOWER_SCHEDULE",
      "default": "0 0 4 * * *"
    },
    {
      "type": "boolean",
      "label": "Cleanup old images",
      "env_variable": "WATCHTOWER_CLEANUP",
      "default": true
    },
    {
      "type": "boolean",
      "label": "Monitor only (no updates)",
      "hint": "Only monitor and notify, don't actually update containers",
      "env_variable": "WATCHTOWER_MONITOR_ONLY",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Enable HTTP API updates",
      "hint": "Allow triggering updates via HTTP API endpoint",
      "env_variable": "WATCHTOWER_HTTP_API_UPDATE",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Enable HTTP API periodic polls",
      "hint": "Keep running periodic updates when HTTP API is enabled",
      "env_variable": "WATCHTOWER_HTTP_API_PERIODIC_POLLS",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Include restarting containers",
      "hint": "Watch containers that are restarting",
      "env_variable": "WATCHTOWER_INCLUDE_RESTARTING",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Include stopped containers",
      "hint": "Also monitor created and exited containers",
      "env_variable": "WATCHTOWER_INCLUDE_STOPPED",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Revive stopped containers",
      "hint": "Start stopped containers when updates are available (requires include stopped)",
      "env_variable": "WATCHTOWER_REVIVE_STOPPED",
      "default": false
    },
    {
      "type": "boolean",
      "label": "Enable HTTP API metrics",
      "hint": "Enable metrics endpoint for monitoring",
      "env_variable": "WATCHTOWER_HTTP_API_METRICS",
      "default": false
    },
    {
      "type": "text",
      "label": "HTTP API Token",
      "hint": "Token for securing HTTP API access (optional)",
      "env_variable": "WATCHTOWER_HTTP_API_TOKEN",
      "required": false
    },
    {
      "type": "boolean",
      "label": "Enable debug logging",
      "hint": "Enable detailed debug output",
      "env_variable": "WATCHTOWER_DEBUG",
      "default": false
    },
    {
      "type": "text",
      "label": "Notification type",
      "hint": "email, slack, msteams, gotify or leave empty",
      "env_variable": "WATCHTOWER_NOTIFICATIONS",
      "default": ""
    },
    {
      "type": "url",
      "label": "Slack webhook URL",
      "env_variable": "WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL",
      "required": false
    },
    {
      "type": "url",
      "label": "MS Teams webhook URL",
      "env_variable": "WATCHTOWER_NOTIFICATION_MSTEAMS_HOOK_URL",
      "required": false
    },
    {
      "type": "url",
      "label": "Gotify URL",
      "env_variable": "WATCHTOWER_NOTIFICATION_GOTIFY_URL",
      "required": false
    },
    {
      "type": "email",
      "label": "Email from",
      "env_variable": "WATCHTOWER_NOTIFICATION_EMAIL_FROM",
      "required": false
    },
    {
      "type": "email",
      "label": "Email to",
      "env_variable": "WATCHTOWER_NOTIFICATION_EMAIL_TO",
      "required": false
    },
    {
      "type": "fqdnip",
      "label": "SMTP server (host:port)",
      "env_variable": "WATCHTOWER_NOTIFICATION_EMAIL_SERVER",
      "required": false
    },
    {
      "type": "text",
      "label": "SMTP username",
      "env_variable": "WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER",
      "required": false
    },
    {
      "type": "password",
      "label": "SMTP password",
      "env_variable": "WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD",
      "required": false
    },
    {
      "type": "text",
      "label": "Extra Watchtower args",
      "hint": "e.g. --rolling-restart or container names to watch",
      "env_variable": "WATCHTOWER_EXTRA_ARGS",
      "default": ""
    }
  ],
  "supported_architectures": ["amd64", "arm64"],
  "created_at": 1740000000000,
  "updated_at": 1740000000000
}
