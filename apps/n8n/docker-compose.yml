version: '3.8'
services:
  n8n-db:
    container_name: n8n-db
    image: postgres:11
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tipi
      - POSTGRES_PASSWORD=${N8N_DB_PASSWORD}
      - POSTGRES_DB=n8n
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -h localhost -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 10
    labels:
      runtipi.managed: true

  n8n-1:
    container_name: n8n-1
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - ${APP_PORT}:5678
    volumes:
      - ${APP_DATA_DIR}/data/n8n:/home/node/.n8n
    environment:
      - N8N_EDITOR_BASE_URL=${APP_PROTOCOL:-http}://${APP_DOMAIN}
      - N8N_SECURE_COOKIE=false
      - WEBHOOK_URL=${APP_PROTOCOL:-http}://${APP_DOMAIN}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=tipi
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
    user: "1000:1000"
    depends_on:
      n8n-db:
        condition: service_healthy
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
      traefik.enable: true
      traefik.http.middlewares.n8n-web-redirect.redirectscheme.scheme: https
      traefik.http.services.n8n.loadbalancer.server.port: 5678
      traefik.http.routers.n8n-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.n8n-insecure.entrypoints: web
      traefik.http.routers.n8n-insecure.service: n8n
      traefik.http.routers.n8n-insecure.middlewares: n8n-web-redirect
      traefik.http.routers.n8n.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.n8n.entrypoints: websecure
      traefik.http.routers.n8n.service: n8n
      traefik.http.routers.n8n.tls.certresolver: myresolver
      traefik.http.routers.n8n-local-insecure.rule: Host(`n8n.${LOCAL_DOMAIN}`)
      traefik.http.routers.n8n-local-insecure.entrypoints: web
      traefik.http.routers.n8n-local-insecure.middlewares: n8n-web-redirect
      traefik.http.routers.n8n-local.rule: Host(`n8n.${LOCAL_DOMAIN}`)
      traefik.http.routers.n8n-local.entrypoints: websecure
      traefik.http.routers.n8n-local.service: n8n
      traefik.http.routers.n8n-local.tls: true

networks:
  tipi_main_network:
    external: true
