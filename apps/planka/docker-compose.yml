version: '3'
services:
  planka:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka
    command: |
      bash -c
        "for i in `seq 1 30`; do
          ./start.sh &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 seconds...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/user-avatars:/app/public/user-avatars
      - ${APP_DATA_DIR}/data/project-background-images:/app/public/project-background-images
      - ${APP_DATA_DIR}/data/background-images:/app/public/background-images
      - ${APP_DATA_DIR}/data/favicons:/app/public/favicons
      - ${APP_DATA_DIR}/data/attachments:/app/private/attachments
    ports:
      - ${APP_PORT}:1337
    environment:
      - BASE_URL=${APP_PROTOCOL:-http}://${APP_DOMAIN}
      - TRUST_PROXY=1
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@planka-db/planka
      - SECRET_KEY=${PLANKA_SECRET_KEY}
      - DEFAULT_ADMIN_EMAIL=${PLANKA_ADMIN_EMAIL}
      - DEFAULT_ADMIN_NAME=${PLANKA_ADMIN_NAME}
      - DEFAULT_ADMIN_USERNAME=${PLANKA_ADMIN_USERNAME}
      - DEFAULT_ADMIN_PASSWORD=${PLANKA_ADMIN_PASSWORD}
      - DEFAULT_LANGUAGE=en-US
      - TZ=${TZ:-Europe/Prague}
    networks:
      - tipi_main_network
    labels:
      traefik.enable: true
      traefik.http.middlewares.planka-web-redirect.redirectscheme.scheme: https
      traefik.http.services.planka.loadbalancer.server.port: 1337
      traefik.http.routers.planka-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.planka-insecure.entrypoints: web
      traefik.http.routers.planka-insecure.service: planka
      traefik.http.routers.planka-insecure.middlewares: planka-web-redirect
      traefik.http.routers.planka.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.planka.entrypoints: websecure
      traefik.http.routers.planka.service: planka
      traefik.http.routers.planka.tls.certresolver: myresolver
      traefik.http.routers.planka-local-insecure.rule: Host(`planka.${LOCAL_DOMAIN}`)
      traefik.http.routers.planka-local-insecure.entrypoints: web
      traefik.http.routers.planka-local-insecure.service: planka
      traefik.http.routers.planka-local-insecure.middlewares: planka-web-redirect
      traefik.http.routers.planka-local.rule: Host(`planka.${LOCAL_DOMAIN}`)
      traefik.http.routers.planka-local.entrypoints: websecure
      traefik.http.routers.planka-local.service: planka
      traefik.http.routers.planka-local.tls: true
      runtipi.managed: true
    depends_on:
      - planka-db

  planka-db:
    image: postgres:16-alpine
    container_name: planka-db
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: planka
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ:-Europe/Prague}
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
