version: '3.7'

services:
  kopia:
    image: kopia/kopia:latest
    container_name: kopia-server
    hostname: ${KOPIA_HOSTNAME:-kopia-server}
    restart: unless-stopped

    environment:
      # ───── Core “run-as” variables ─────
      - PUID=${KOPIA_PUID:-1000}
      - PGID=${KOPIA_PGID:-1000}
      - TZ=${TZ:-Europe/Prague}

      # ───── Repo & Web UI credentials ─────
      - KOPIA_PASSWORD=${KOPIA_PASSWORD}             # Repository encryption passphrase
      - KOPIA_SERVER_USERNAME=${KOPIA_SERVER_USERNAME:-admin}
      - KOPIA_SERVER_PASSWORD=${KOPIA_SERVER_PASSWORD}

      # ───── TLS / Debug (optional) ─────
      - KOPIA_ENABLE_TLS=${KOPIA_ENABLE_TLS:-false}   # true → Kopia serves HTTPS
      - KOPIA_TLS_CERT_FILE=${KOPIA_TLS_CERT_FILE:-}  # e.g. /app/config/server.crt
      - KOPIA_TLS_KEY_FILE=${KOPIA_TLS_KEY_FILE:-}    # e.g. /app/config/server.key
      - KOPIA_LOG_DEBUG=${KOPIA_LOG_DEBUG:-false}     # true → `--log-level=debug`

      # ───── Backup scope ─────
      - KOPIA_DATA_PATH=${KOPIA_DATA_PATH:-/}         # Which host path to mount read-only at /data

    ports:
      - "${APP_PORT:-51515}:51515"

    volumes:
      - "${APP_DATA_DIR}/data/config:/app/config"       # (1) TLS certs, future configs
      - "${APP_DATA_DIR}/data/cache:/app/cache"         # (2) Kopia local cache
      - "${APP_DATA_DIR}/data/logs:/app/logs"           # (3) Kopia logs
      - "${APP_DATA_DIR}/data/repository:/repository"   # (4) Initially empty—Web UI will Create/Connect here
      - "${APP_DATA_DIR}/data/snapshots:/tmp:shared"    # (5) Needed to browse mounted snapshots
      - "/:${KOPIA_DATA_PATH}:ro"                       # (6) Host path (e.g. `/home/dietpi`) to back up

    command: >
      sh -c "
      set -e;
      echo \"${KOPIA_PASSWORD}\" > /tmp/kopia_pass && chmod 600 /tmp/kopia_pass;
      FLAGS=\"\";
      if [ \"${KOPIA_ENABLE_TLS}\" = \"true\" ]; then
        FLAGS=\"$FLAGS --tls-cert-file=${KOPIA_TLS_CERT_FILE} --tls-key-file=${KOPIA_TLS_KEY_FILE}\";
      else
        FLAGS=\"$FLAGS --insecure\";
      fi;
      [ \"${KOPIA_LOG_DEBUG}\" = \"true\" ] && FLAGS=\"$FLAGS --log-level=debug\";
      exec kopia server start $FLAGS --address=0.0.0.0:51515 --server-username=\"${KOPIA_SERVER_USERNAME}\" --server-password=\"${KOPIA_SERVER_PASSWORD}\""

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

    networks:
      - tipi_main_network

    labels:
      traefik.enable: true

      # HTTP → HTTPS redirect
      traefik.http.middlewares.kopia-web-redirect.redirectscheme.scheme: https

      # Insecure (HTTP) router
      traefik.http.routers.kopia-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.kopia-insecure.entrypoints: web
      traefik.http.routers.kopia-insecure.middlewares: kopia-web-redirect
      traefik.http.routers.kopia-insecure.service: kopia

      # Secure (HTTPS) router
      traefik.http.routers.kopia.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.kopia.entrypoints: websecure
      traefik.http.routers.kopia.tls.certresolver: myresolver
      traefik.http.routers.kopia.service: kopia

      # Local-dev HTTP router
      traefik.http.routers.kopia-local-insecure.rule: Host(`kopia.${LOCAL_DOMAIN}`)
      traefik.http.routers.kopia-local-insecure.entrypoints: web
      traefik.http.routers.kopia-local-insecure.middlewares: kopia-web-redirect
      traefik.http.routers.kopia-local-insecure.service: kopia

      # Local-dev HTTPS router
      traefik.http.routers.kopia-local.rule: Host(`kopia.${LOCAL_DOMAIN}`)
      traefik.http.routers.kopia-local.entrypoints: websecure
      traefik.http.routers.kopia-local.tls: true
      traefik.http.routers.kopia-local.service: kopia

      runtipi.managed: true

networks:
  tipi_main_network:
    external: true
