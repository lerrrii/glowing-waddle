version: '3.8'

services:
  nodered:
    container_name: nodered
    image: nodered/node-red:4.0.9
    environment:
      TZ: "${TZ:-Europe/Prague}"
      NODE_RED_USERNAME: "${NODE_RED_USERNAME}"
      NODE_RED_PASSWORD: "${NODE_RED_PASSWORD}"
      NODE_RED_CREDENTIAL_SECRET: "${NODE_RED_CREDENTIAL_SECRET}"
    volumes:
      - "${APP_DATA_DIR}/data:/data"
    restart: unless-stopped
    ports:
      - "${APP_PORT:-1880}:1880"
    healthcheck:
      test: "curl --fail http://localhost:1880/ || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: true
      traefik.http.middlewares.nodered-web-redirect.redirectscheme.scheme: https
      traefik.http.services.nodered.loadbalancer.server.port: 1880
      # Web
      traefik.http.routers.nodered-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nodered-insecure.entrypoints: web
      traefik.http.routers.nodered-insecure.service: nodered
      traefik.http.routers.nodered-insecure.middlewares: nodered-web-redirect
      # Websecure
      traefik.http.routers.nodered.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nodered.entrypoints: websecure
      traefik.http.routers.nodered.service: nodered
      traefik.http.routers.nodered.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.nodered-local-insecure.rule: Host(`nodered.${LOCAL_DOMAIN}`)
      traefik.http.routers.nodered-local-insecure.entrypoints: web
      traefik.http.routers.nodered-local-insecure.service: nodered
      traefik.http.routers.nodered-local-insecure.middlewares: nodered-web-redirect
      # Local domain secure
      traefik.http.routers.nodered-local.rule: Host(`nodered.${LOCAL_DOMAIN}`)
      traefik.http.routers.nodered-local.entrypoints: websecure
      traefik.http.routers.nodered-local.service: nodered
      traefik.http.routers.nodered-local.tls: true
      runtipi.managed: true
      
networks:
  tipi_main_network:
    external: true
